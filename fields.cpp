/**
 * NOTE: This is a vendored and modified version of a file from the
 * glmnet/Dsmr project. The original license is preserved below.
 *
 * Modifications are Copyright (c) 2025 (Niko Paulanne).
 * These modifications are licensed under the GPLv3, as part of the
 * dsmr_custom ESPHome component.
 *
 * Summary of modifications:
 * - This file provides storage definitions for static members from the modified fields.h.
 * - Updated definitions to match the modified DEFINE_FIELD macro, which now generates
 * members with trailing underscores (e.g., `id_`, `name_progmem_`).
 */

/*
 * Arduino DSMR parser.
 *
 * This software is licensed under the MIT License.
 *
 * Copyright (c) 2015 Matthijs Kooijman <matthijs@stdin.nl>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * @file fields.cpp
 * @brief Vendored and modified field definitions source from glmnet/arduino-dsmr.
 * @details Provides storage definitions for static members declared in fields.h.
 * Modified for the ESPHome dsmr_custom component to align with the updated
 * DEFINE_FIELD macro.
 * @author Niko Paulanne
 */

// BEGIN MODIFICATION FOR ESPHOME DSMR_CUSTOM
// MODIFICATION: Include path adjusted for placement within parser_lib.
#include "fields.h"
// END MODIFICATION FOR ESPHOME DSMR_CUSTOM

// Using directives for convenience within this file.
using namespace dsmr;
using namespace dsmr::fields; // Allows direct use of field names like 'identification'.

// --- Storage Definitions for static constexpr members from fields.h ---

// For static constexpr members declared in a class/struct, if their address is taken
// or if the compiler requires it (older C++ standards or specific compiler behavior,
// especially for arrays), a definition outside the class/struct is needed to allocate storage.

// --- Definitions for `units` struct members (PROGMEM char arrays) ---
// These provide storage for the unit strings declared in fields.h.
// The `constexpr` in the header initializes them, but this definition ensures
// they have a unique storage location if their address is taken.
constexpr char units::none[];
constexpr char units::kWh[];
constexpr char units::Wh[];
constexpr char units::kW[];
constexpr char units::W[];
constexpr char units::kV[];
constexpr char units::V[];
constexpr char units::mV[];
constexpr char units::kA[];
constexpr char units::A[];
constexpr char units::mA[];
constexpr char units::m3[];
constexpr char units::dm3[];
constexpr char units::GJ[];
constexpr char units::MJ[];
constexpr char units::kvar[];
constexpr char units::kvarh[];
constexpr char units::kVA[];
constexpr char units::VA[];
constexpr char units::s[];
constexpr char units::Hz[];
constexpr char units::kHz[];

// --- Definitions for each field's `id_` and `name_progmem_` ---
// The modified DEFINE_FIELD macro in `parser_lib/fields.h` declares:
//   static constexpr ObisId id_{obis};
//   static constexpr char name_progmem_[] DSMR_PROGMEM = #fieldname;
// These definitions provide the actual storage for these static members.
//
// BEGIN MODIFICATION FOR ESPHOME DSMR_CUSTOM
// MODIFICATION:
// 1. All `constexpr char fieldname::name[];` definitions have been REMOVED.
//    Reason: In the modified `DEFINE_FIELD` macro, `name` is now a static method `name()`
//            and `name_progmem_` is `static constexpr` initialized in the header.
//            A separate definition for `name[]` is no longer needed and would conflict.
// 2. All `constexpr ObisId fieldname::id;` definitions have been CHANGED to `constexpr ObisId fieldname::id_;`
//    Reason: To match the `id_` member with a trailing underscore generated by the modified `DEFINE_FIELD`.
// 3. Definitions for `constexpr char fieldname::name_progmem_[];` have been ADDED for each field.
//    Reason: To provide storage for the `name_progmem_` array, consistent with how `name[]` was handled
//            in the original `glmnet/Dsmr` fields.cpp.
// END MODIFICATION FOR ESPHOME DSMR_CUSTOM

// Meter identification
constexpr ObisId identification::id_;
constexpr char identification::name_progmem_[];

// P1 Version
constexpr ObisId p1_version::id_;
constexpr char p1_version::name_progmem_[];
constexpr ObisId p1_version_be::id_;
constexpr char p1_version_be::name_progmem_[];
constexpr ObisId p1_version_ch::id_;
constexpr char p1_version_ch::name_progmem_[];

// Timestamp
constexpr ObisId timestamp::id_;
constexpr char timestamp::name_progmem_[];

// Equipment Identifier
constexpr ObisId equipment_id::id_;
constexpr char equipment_id::name_progmem_[];

// Energy Delivered/Returned (Tariffs & Lux)
constexpr ObisId energy_delivered_lux::id_;
constexpr char energy_delivered_lux::name_progmem_[];
constexpr ObisId energy_delivered_tariff1::id_;
constexpr char energy_delivered_tariff1::name_progmem_[];
constexpr ObisId energy_delivered_tariff2::id_;
constexpr char energy_delivered_tariff2::name_progmem_[];
constexpr ObisId energy_delivered_tariff3::id_;
constexpr char energy_delivered_tariff3::name_progmem_[];
constexpr ObisId energy_delivered_tariff4::id_;
constexpr char energy_delivered_tariff4::name_progmem_[];

constexpr ObisId reactive_energy_delivered_tariff1::id_;
constexpr char reactive_energy_delivered_tariff1::name_progmem_[];
constexpr ObisId reactive_energy_delivered_tariff2::id_;
constexpr char reactive_energy_delivered_tariff2::name_progmem_[];
constexpr ObisId reactive_energy_delivered_tariff3::id_;
constexpr char reactive_energy_delivered_tariff3::name_progmem_[];
constexpr ObisId reactive_energy_delivered_tariff4::id_;
constexpr char reactive_energy_delivered_tariff4::name_progmem_[];

constexpr ObisId energy_delivered_tariff1_ch::id_;
constexpr char energy_delivered_tariff1_ch::name_progmem_[];
constexpr ObisId energy_delivered_tariff2_ch::id_;
constexpr char energy_delivered_tariff2_ch::name_progmem_[];

constexpr ObisId energy_returned_lux::id_;
constexpr char energy_returned_lux::name_progmem_[];
constexpr ObisId energy_returned_tariff1::id_;
constexpr char energy_returned_tariff1::name_progmem_[];
constexpr ObisId energy_returned_tariff2::id_;
constexpr char energy_returned_tariff2::name_progmem_[];
constexpr ObisId energy_returned_tariff3::id_;
constexpr char energy_returned_tariff3::name_progmem_[];
constexpr ObisId energy_returned_tariff4::id_;
constexpr char energy_returned_tariff4::name_progmem_[];

constexpr ObisId reactive_energy_returned_tariff1::id_;
constexpr char reactive_energy_returned_tariff1::name_progmem_[];
constexpr ObisId reactive_energy_returned_tariff2::id_;
constexpr char reactive_energy_returned_tariff2::name_progmem_[];
constexpr ObisId reactive_energy_returned_tariff3::id_;
constexpr char reactive_energy_returned_tariff3::name_progmem_[];
constexpr ObisId reactive_energy_returned_tariff4::id_;
constexpr char reactive_energy_returned_tariff4::name_progmem_[];

constexpr ObisId energy_returned_tariff1_ch::id_;
constexpr char energy_returned_tariff1_ch::name_progmem_[];
constexpr ObisId energy_returned_tariff2_ch::id_;
constexpr char energy_returned_tariff2_ch::name_progmem_[];

// Total Reactive Energy
constexpr ObisId total_imported_energy::id_;
constexpr char total_imported_energy::name_progmem_[];
constexpr ObisId total_exported_energy::id_;
constexpr char total_exported_energy::name_progmem_[];

// Electricity Tariff Indicator
constexpr ObisId electricity_tariff::id_;
constexpr char electricity_tariff::name_progmem_[];

// Power Delivered/Returned
constexpr ObisId power_delivered::id_;
constexpr char power_delivered::name_progmem_[];
constexpr ObisId power_returned::id_;
constexpr char power_returned::name_progmem_[];
constexpr ObisId reactive_power_delivered::id_;
constexpr char reactive_power_delivered::name_progmem_[];
constexpr ObisId reactive_power_returned::id_;
constexpr char reactive_power_returned::name_progmem_[];
constexpr ObisId power_delivered_ch::id_;
constexpr char power_delivered_ch::name_progmem_[];
constexpr ObisId power_returned_ch::id_;
constexpr char power_returned_ch::name_progmem_[];

// Electricity Threshold & Switch Position
constexpr ObisId electricity_threshold::id_;
constexpr char electricity_threshold::name_progmem_[];
constexpr ObisId electricity_switch_position::id_;
constexpr char electricity_switch_position::name_progmem_[];

// Electricity Failures
constexpr ObisId electricity_failures::id_;
constexpr char electricity_failures::name_progmem_[];
constexpr ObisId electricity_long_failures::id_;
constexpr char electricity_long_failures::name_progmem_[];
constexpr ObisId electricity_failure_log::id_;
constexpr char electricity_failure_log::name_progmem_[];

// Voltage Sags/Swells
constexpr ObisId electricity_sags_l1::id_;
constexpr char electricity_sags_l1::name_progmem_[];
constexpr ObisId voltage_sag_time_l1::id_;
constexpr char voltage_sag_time_l1::name_progmem_[];
constexpr ObisId voltage_sag_l1::id_;
constexpr char voltage_sag_l1::name_progmem_[];
constexpr ObisId electricity_sags_l2::id_;
constexpr char electricity_sags_l2::name_progmem_[];
constexpr ObisId voltage_sag_time_l2::id_;
constexpr char voltage_sag_time_l2::name_progmem_[];
constexpr ObisId voltage_sag_l2::id_;
constexpr char voltage_sag_l2::name_progmem_[];
constexpr ObisId electricity_sags_l3::id_;
constexpr char electricity_sags_l3::name_progmem_[];
constexpr ObisId voltage_sag_time_l3::id_;
constexpr char voltage_sag_time_l3::name_progmem_[];
constexpr ObisId voltage_sag_l3::id_;
constexpr char voltage_sag_l3::name_progmem_[];

constexpr ObisId electricity_swells_l1::id_;
constexpr char electricity_swells_l1::name_progmem_[];
constexpr ObisId voltage_swell_time_l1::id_;
constexpr char voltage_swell_time_l1::name_progmem_[];
constexpr ObisId voltage_swell_l1::id_;
constexpr char voltage_swell_l1::name_progmem_[];
constexpr ObisId electricity_swells_l2::id_;
constexpr char electricity_swells_l2::name_progmem_[];
constexpr ObisId voltage_swell_time_l2::id_;
constexpr char voltage_swell_time_l2::name_progmem_[];
constexpr ObisId voltage_swell_l2::id_;
constexpr char voltage_swell_l2::name_progmem_[];
constexpr ObisId electricity_swells_l3::id_;
constexpr char electricity_swells_l3::name_progmem_[];
constexpr ObisId voltage_swell_time_l3::id_;
constexpr char voltage_swell_time_l3::name_progmem_[];
constexpr ObisId voltage_swell_l3::id_;
constexpr char voltage_swell_l3::name_progmem_[];

// Messages
constexpr ObisId message_short::id_;
constexpr char message_short::name_progmem_[];
constexpr ObisId message_long::id_;
constexpr char message_long::name_progmem_[];

// Phase Voltages
constexpr ObisId voltage_l1::id_;
constexpr char voltage_l1::name_progmem_[];
constexpr ObisId voltage_avg_l1::id_;
constexpr char voltage_avg_l1::name_progmem_[];
constexpr ObisId voltage_l2::id_;
constexpr char voltage_l2::name_progmem_[];
constexpr ObisId voltage_avg_l2::id_;
constexpr char voltage_avg_l2::name_progmem_[];
constexpr ObisId voltage_l3::id_;
constexpr char voltage_l3::name_progmem_[];
constexpr ObisId voltage_avg_l3::id_;
constexpr char voltage_avg_l3::name_progmem_[];

// Other Voltage/Frequency/Power
constexpr ObisId voltage::id_;
constexpr char voltage::name_progmem_[];
constexpr ObisId frequency::id_;
constexpr char frequency::name_progmem_[];
constexpr ObisId abs_power::id_;
constexpr char abs_power::name_progmem_[];

// Phase Currents
constexpr ObisId current_l1::id_;
constexpr char current_l1::name_progmem_[];
constexpr ObisId current_fuse_l1::id_;
constexpr char current_fuse_l1::name_progmem_[];
constexpr ObisId current_l2::id_;
constexpr char current_l2::name_progmem_[];
constexpr ObisId current_fuse_l2::id_;
constexpr char current_fuse_l2::name_progmem_[];
constexpr ObisId current_l3::id_;
constexpr char current_l3::name_progmem_[];
constexpr ObisId current_fuse_l3::id_;
constexpr char current_fuse_l3::name_progmem_[];

// Other Currents
constexpr ObisId current::id_;
constexpr char current::name_progmem_[];
constexpr ObisId current_n::id_;
constexpr char current_n::name_progmem_[];
constexpr ObisId current_sum::id_;
constexpr char current_sum::name_progmem_[];

// Phase Active Power Delivered/Returned
constexpr ObisId power_delivered_l1::id_;
constexpr char power_delivered_l1::name_progmem_[];
constexpr ObisId power_delivered_l2::id_;
constexpr char power_delivered_l2::name_progmem_[];
constexpr ObisId power_delivered_l3::id_;
constexpr char power_delivered_l3::name_progmem_[];
constexpr ObisId power_returned_l1::id_;
constexpr char power_returned_l1::name_progmem_[];
constexpr ObisId power_returned_l2::id_;
constexpr char power_returned_l2::name_progmem_[];
constexpr ObisId power_returned_l3::id_;
constexpr char power_returned_l3::name_progmem_[];

// Phase Reactive Power Delivered/Returned
constexpr ObisId reactive_power_delivered_l1::id_;
constexpr char reactive_power_delivered_l1::name_progmem_[];
constexpr ObisId reactive_power_delivered_l2::id_;
constexpr char reactive_power_delivered_l2::name_progmem_[];
constexpr ObisId reactive_power_delivered_l3::id_;
constexpr char reactive_power_delivered_l3::name_progmem_[];
constexpr ObisId reactive_power_returned_l1::id_;
constexpr char reactive_power_returned_l1::name_progmem_[];
constexpr ObisId reactive_power_returned_l2::id_;
constexpr char reactive_power_returned_l2::name_progmem_[];
constexpr ObisId reactive_power_returned_l3::id_;
constexpr char reactive_power_returned_l3::name_progmem_[];

// Apparent Power
constexpr ObisId apparent_delivery_power::id_;
constexpr char apparent_delivery_power::name_progmem_[];
constexpr ObisId apparent_delivery_power_l1::id_;
constexpr char apparent_delivery_power_l1::name_progmem_[];
constexpr ObisId apparent_delivery_power_l2::id_;
constexpr char apparent_delivery_power_l2::name_progmem_[];
constexpr ObisId apparent_delivery_power_l3::id_;
constexpr char apparent_delivery_power_l3::name_progmem_[];
constexpr ObisId apparent_return_power::id_;
constexpr char apparent_return_power::name_progmem_[];
constexpr ObisId apparent_return_power_l1::id_;
constexpr char apparent_return_power_l1::name_progmem_[];
constexpr ObisId apparent_return_power_l2::id_;
constexpr char apparent_return_power_l2::name_progmem_[];
constexpr ObisId apparent_return_power_l3::id_;
constexpr char apparent_return_power_l3::name_progmem_[];

// Active Demand Power
constexpr ObisId active_demand_power::id_;
constexpr char active_demand_power::name_progmem_[];
constexpr ObisId active_demand_abs::id_;
constexpr char active_demand_abs::name_progmem_[];

// Gas Meter Fields
constexpr ObisId gas_device_type::id_;
constexpr char gas_device_type::name_progmem_[];
constexpr ObisId gas_equipment_id::id_;
constexpr char gas_equipment_id::name_progmem_[];
constexpr ObisId gas_equipment_id_be::id_;
constexpr char gas_equipment_id_be::name_progmem_[];
constexpr ObisId gas_valve_position::id_;
constexpr char gas_valve_position::name_progmem_[];
constexpr ObisId gas_delivered::id_;
constexpr char gas_delivered::name_progmem_[];
constexpr ObisId gas_delivered_be::id_;
constexpr char gas_delivered_be::name_progmem_[];
constexpr ObisId gas_delivered_text::id_;
constexpr char gas_delivered_text::name_progmem_[];

// Thermal Meter Fields
constexpr ObisId thermal_device_type::id_;
constexpr char thermal_device_type::name_progmem_[];
constexpr ObisId thermal_equipment_id::id_;
constexpr char thermal_equipment_id::name_progmem_[];
constexpr ObisId thermal_valve_position::id_;
constexpr char thermal_valve_position::name_progmem_[];
constexpr ObisId thermal_delivered::id_;
constexpr char thermal_delivered::name_progmem_[];

// Water Meter Fields
constexpr ObisId water_device_type::id_;
constexpr char water_device_type::name_progmem_[];
constexpr ObisId water_equipment_id::id_;
constexpr char water_equipment_id::name_progmem_[];
constexpr ObisId water_valve_position::id_;
constexpr char water_valve_position::name_progmem_[];
constexpr ObisId water_delivered::id_;
constexpr char water_delivered::name_progmem_[];

// Sub ("Slave") Meter Fields
constexpr ObisId sub_device_type::id_;
constexpr char sub_device_type::name_progmem_[];
constexpr ObisId sub_equipment_id::id_;
constexpr char sub_equipment_id::name_progmem_[];
constexpr ObisId sub_valve_position::id_;
constexpr char sub_valve_position::name_progmem_[];
constexpr ObisId sub_delivered::id_;
constexpr char sub_delivered::name_progmem_[];

// Belgian Capacity Rate / Peak Consumption Fields
constexpr ObisId active_energy_import_current_average_demand::id_;
constexpr char active_energy_import_current_average_demand::name_progmem_[];
constexpr ObisId active_energy_export_current_average_demand::id_;
constexpr char active_energy_export_current_average_demand::name_progmem_[];
constexpr ObisId reactive_energy_import_current_average_demand::id_;
constexpr char reactive_energy_import_current_average_demand::name_progmem_[];
constexpr ObisId reactive_energy_export_current_average_demand::id_;
constexpr char reactive_energy_export_current_average_demand::name_progmem_[];
constexpr ObisId apparent_energy_import_current_average_demand::id_;
constexpr char apparent_energy_import_current_average_demand::name_progmem_[];
constexpr ObisId apparent_energy_export_current_average_demand::id_;
constexpr char apparent_energy_export_current_average_demand::name_progmem_[];
constexpr ObisId active_energy_import_last_completed_demand::id_;
constexpr char active_energy_import_last_completed_demand::name_progmem_[];
constexpr ObisId active_energy_export_last_completed_demand::id_;
constexpr char active_energy_export_last_completed_demand::name_progmem_[];
constexpr ObisId reactive_energy_import_last_completed_demand::id_;
constexpr char reactive_energy_import_last_completed_demand::name_progmem_[];
constexpr ObisId reactive_energy_export_last_completed_demand::id_;
constexpr char reactive_energy_export_last_completed_demand::name_progmem_[];
constexpr ObisId apparent_energy_import_last_completed_demand::id_;
constexpr char apparent_energy_import_last_completed_demand::name_progmem_[];
constexpr ObisId apparent_energy_export_last_completed_demand::id_;
constexpr char apparent_energy_export_last_completed_demand::name_progmem_[];
constexpr ObisId active_energy_import_maximum_demand_running_month::id_;
constexpr char active_energy_import_maximum_demand_running_month::name_progmem_[];
constexpr ObisId active_energy_import_maximum_demand_last_13_months::id_;
constexpr char active_energy_import_maximum_demand_last_13_months::name_progmem_[];

// Firmware Version Fields
constexpr ObisId fw_core_version::id_;
constexpr char fw_core_version::name_progmem_[];
constexpr ObisId fw_core_checksum::id_;
constexpr char fw_core_checksum::name_progmem_[];
constexpr ObisId fw_module_version::id_;
constexpr char fw_module_version::name_progmem_[];
constexpr ObisId fw_module_checksum::id_;
constexpr char fw_module_checksum::name_progmem_[];

